# ============================================================ 
# üåç Pipeline Econ√≥mico Global ‚Äî World Bank + FRED
# ============================================================
# Descarga autom√°tica de datos macroecon√≥micos anuales:
#  - Banco Mundial (World Development Indicators)
#  - Reserva Federal de EE.UU. (FRED)
# ============================================================

# ------------------------------------------------------------
# üîá Limpieza global de logs y warnings
# ------------------------------------------------------------
import os
import sys
import warnings
import logging
import urllib3

warnings.filterwarnings("ignore")
logging.getLogger().setLevel(logging.CRITICAL)
for name in logging.root.manager.loggerDict:
    logging.getLogger(name).setLevel(logging.CRITICAL)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
logging.getLogger("urllib3").setLevel(logging.CRITICAL)
logging.getLogger("requests").setLevel(logging.CRITICAL)

os.environ["TF_CPP_MIN_LOG_LEVEL"] = "3"  # oculta logs C++/TensorFlow
os.environ["PYTHONWARNINGS"] = "ignore"

# ------------------------------------------------------------
# üß≠ Configuraci√≥n de rutas para ejecuci√≥n directa o modular
# ------------------------------------------------------------
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
print("‚úÖ Entorno inicializado. Ejecutando pipeline global...")

# ------------------------------------------------------------
# üîß Importaci√≥n de m√≥dulos del pipeline
# ------------------------------------------------------------
from src.utils_worldbank import get_worldbank_country_list
from src.api_worldbank import fetch_worldbank_data
from src.api_fred import fetch_fred_data
# ------------------------------------------------------------

def update_all_data():
    """
    Ejecuta la actualizaci√≥n completa del pipeline:
    1Ô∏è‚É£ Descarga lista oficial de pa√≠ses y datos del Banco Mundial
    2Ô∏è‚É£ Descarga datos globales del FRED (commodities y tasas)
    3Ô∏è‚É£ Devuelve ambos DataFrames
    """
    # ======================================================
    # 1Ô∏è‚É£ Banco Mundial
    # ======================================================
    df_countries = get_worldbank_country_list()
    iso_codes = df_countries["ISO"].tolist()
    print(f"üåç {len(iso_codes)} pa√≠ses v√°lidos detectados en la API del Banco Mundial.")
    df_wb = fetch_worldbank_data(iso_codes, start_year=1970)

    # ======================================================
    # 2Ô∏è‚É£ Reserva Federal (FRED)
    # ======================================================
    df_fred = fetch_fred_data()


    # ======================================================
    # 4Ô∏è‚É£ Resumen general
    # ======================================================
    print("\nüìä RESUMEN GENERAL:")
    print(f"   üåç Banco Mundial ‚Üí {len(df_wb):,} filas, {df_wb['Country'].nunique()} pa√≠ses.")
    print(f"   ü™ô FRED ‚Üí {len(df_fred):,} filas, {df_fred['Year'].nunique()} a√±os de datos globales.")
    print("\n‚úÖ Pipeline ejecutado correctamente.")
    print("üìÅ Archivos generados en carpeta 'data/external/'")

    return df_wb, df_fred


# ------------------------------------------------------------
# üöÄ Ejecuci√≥n directa
# ------------------------------------------------------------
if __name__ == "__main__":
    update_all_data()
